<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default environment" created="3.42.1" encryptionMode="Not encrypted" id="91f74114-c085-4974-b3fd-ad211047f49c" name="Project 2 Webservices" projectVersion="" resourceRoot="" updated="3.42.1" abortOnError="false" runType="SEQUENTIAL" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="91f74114-c085-4974-b3fd-ad211047f49cfileName">Projet Git webservices</con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Settings File Password" value=""/>
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="Test Suite - Libreplan"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="Test Case 6"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\ReadyAPI-3.42.1\bin"/>
  <con:entry key="Environment" value="No Environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:requirements/><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:eventHandlers name="RequestFilter.filterRequest" type="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers name="TestRunListener.afterStep" type="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:environment id="5eadaddc-50e1-41ae-911a-8a2f7c39ffe0" name="demo" index="0"><con:service type="REST" name="LibrePlan - REST"><con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://demo.libreplan.dev/libreplan/</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:environment id="e2e9701f-ac19-4e25-a4a0-65eddefe8bd7" name="prod" index="1"><con:service type="REST" name="LibrePlan - REST"><con:endpoint authProfile="Reader" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8180/libreplan/</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:environment id="d0beedb0-1186-4d88-99b9-78d2322fa1f9" name="dev" index="2"><con:service type="REST" name="LibrePlan - REST"><con:endpoint authProfile="Writer" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">http://localhost:8180/libreplan-webapp/</con:endpoint></con:service><con:databaseConnectionContainer/><con:jmsConnectionContainer/></con:environment><con:authRepository><con:basicAuthEntry><con:name>Reader</con:name><con:type>Basic</con:type><con:username>wsreader</con:username><con:password>wsreader</con:password><con:preemptive>true</con:preemptive></con:basicAuthEntry><con:basicAuthEntry><con:name>Writer</con:name><con:type>Basic</con:type><con:username>wswriter</con:username><con:password>wswriter</con:password><con:preemptive>true</con:preemptive></con:basicAuthEntry><con:basicAuthEntry><con:name>Admin</con:name><con:type>Basic</con:type><con:username>admin</con:username><con:password>admin</con:password><con:preemptive>false</con:preemptive></con:basicAuthEntry></con:authRepository><con:environmentSpec><con:entry environmentId="5eadaddc-50e1-41ae-911a-8a2f7c39ffe0"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="e2e9701f-ac19-4e25-a4a0-65eddefe8bd7"><con:authProfile>No Authorization</con:authProfile></con:entry><con:entry environmentId="d0beedb0-1186-4d88-99b9-78d2322fa1f9"><con:authProfile>No Authorization</con:authProfile></con:entry></con:environmentSpec><con:tags/></con:soapui-project>